"""
Django settings for tzb project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import logging

#当前文件路径
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "tzb.settings")
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'd(@)9q-at1m!)#jvdfkc28ly7%x!9t@crsic9rz&j30hf_7buy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 新建app不加的话， 找不到app的模板文件 app-name/templates/下的文件 和静态文件 app-name/static/
    'tongzhan',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # post请求要注释
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tzb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tzb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'default': {
        #     'ENGINE': 'django.db.backends.sqlite3',
        #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tzb',
        'USER': 'root',
        'PASSWORD': 'yVoei_8dU%5,',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

#静态资源访问l路径
STATIC_URL = '/static/'

#服务器存储图片路径
# 如果不想用 STATICFILES_DIRS 可以不用，都放在 app 里的 static 中也可以
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "common_static"),
    '/Users/guozhixiao/Downloads/',  # 用不到的时候可以不写这一行
)
LOGS_DIR = "/Users/guozhixiao/Downloads/log/"
# 配置日志信息
# LOGGING = {
#     # 设置版本
#     'version': 1,
#     # 是否允许其他日志功能，Flase表示不禁用，禁用导致其他记录日志的功能将被阻止
#     'disable_existing_loggers': True,
#     # 格式化，日志输出格式
#     'formatters': {
#         # 详细
#        'standard': {
#             # 日志格式
#             'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s-%(process)d'
#        },
#         # 简单，可以自己添加或减少，看需求
#         'simple': {
#             'format': '%(levelname)s %(module)s  %(message)s'
#         },
#     },
#     # 过滤器，过滤掉debug级别的错误，原因：debuf会输出在控制台，没必要记录
#     'filters': {
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         },
#     },
#     # 日志的处理方式
#     'handlers': {
#         # 将级别为DEBUG的错误以简单的形式输出在控制台
#         'console': {
#             'level': 'DEBUG',
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'simple'
#         },
#         # 'console': {
#         #     'level': 'DEBUG',
#         #     'class': 'logging.StreamHandler',
#         #     'formatter': 'standard'
#         # },
#         # 将INFO级别及以上的错误储存在文件中
#         'file': {
#             'level': 'INFO',
#             'class': 'logging.handlers.RotatingFileHandler',
#             # 日志文件的位置
#             'filename': '/Users/guozhixiao/Downloads/log/crawler.log',
#             # 单个文件大小 300M
#             'maxBytes': 300 * 1024 * 1024,
#             # 最多储存文件个数，超过十个则重头开始覆盖第一个文件
#             'backupCount': 10,
#             # 使用哪种formatters日志格式
#             'formatter': 'standard',
#         },
#         # 以邮件形式发送日志
#         'mail_admins': {
#             'level': 'ERROR',
#             'class': 'django.utils.log.AdminEmailHandler',
#             'include_html': True,
#         },
#         # 默认debug级别
#         'default': {
#             'level': 'DEBUG',
#             'class': 'logging.handlers.RotatingFileHandler',
#             # 日志文件的位置
#             'filename': '/Users/guozhixiao/Downloads/log/crawler_default.log',
#             # 单个文件大小 300M
#             'maxBytes': 300 * 1024 * 1024,
#             # 最多储存文件个数，超过十个则重头开始覆盖第一个文件
#             'backupCount': 10,
#             # 使用哪种formatters日志格式
#             'formatter': 'standard',
#         },
#         # 错误级别日志
#         'error': {
#             'level': 'ERROR',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': '/Users/guozhixiao/Downloads/log/crawler_error.log',
#             # 单个文件大小 300M
#             'maxBytes': 300 * 1024 * 1024,
#             # 最多储存文件个数，超过十个则重头开始覆盖第一个文件
#             'backupCount': 10,
#             # 使用哪种formatters日志格式
#             'formatter': 'standard',
#         },
#         'request_handler': {
#             'level': 'DEBUG',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': '/Users/guozhixiao/Downloads/log/crawler_request_handler.log',
#             # 单个文件大小 300M
#             'maxBytes': 300 * 1024 * 1024,
#             # 最多储存文件个数，超过十个则重头开始覆盖第一个文件
#             'backupCount': 10,
#             # 使用哪种formatters日志格式
#             'formatter': 'standard',
#         },
#         'scprits_handler': {
#             'level': 'DEBUG',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': '/Users/guozhixiao/Downloads/log/crawler_scprits_handler.log',
#             # 单个文件大小 300M
#             'maxBytes': 300 * 1024 * 1024,
#             # 最多储存文件个数，超过十个则重头开始覆盖第一个文件
#             'backupCount': 10,
#             # 使用哪种formatters日志格式
#             'formatter': 'standard',
#         }
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['default', 'console'],
#             'level': 'DEBUG',
#             'propagate': False
#         },
#         'django.request': {
#             'handlers': ['request_handler'],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#         'scripts': {
#             'handlers': ['scprits_handler'],
#             'level': 'INFO',
#             'propagate': False
#         },
#         'sourceDns.webdns.views': {
#             'handlers': ['default', 'error'],
#             'level': 'DEBUG',
#             'propagate': True
#         },
#         'sourceDns.webdns.util': {
#             'handlers': ['error'],
#             'level': 'ERROR',
#             'propagate': True
#         },
#         'file': {
#             'handlers': ['file'],
#             'level': 'ERROR',
#             'propagate': True
#         },
#         'error': {
#             'handlers': ['error'],
#             'level': 'ERROR',
#             'propagate': True
#         },
#     }
# }